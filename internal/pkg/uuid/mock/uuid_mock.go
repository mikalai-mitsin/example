// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/018bf/example/internal/pkg/uuid (interfaces: Generator)
//
// Generated by this command:
//
//	mockgen -build_flags=-mod=mod -destination mock/uuid_mock.go . Generator
//

// Package mock_uuid is a generated GoMock package.
package mock_uuid

import (
	reflect "reflect"

	uuid "github.com/018bf/example/internal/pkg/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockGenerator is a mock of Generator interface.
type MockGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockGeneratorMockRecorder
}

// MockGeneratorMockRecorder is the mock recorder for MockGenerator.
type MockGeneratorMockRecorder struct {
	mock *MockGenerator
}

// NewMockGenerator creates a new mock instance.
func NewMockGenerator(ctrl *gomock.Controller) *MockGenerator {
	mock := &MockGenerator{ctrl: ctrl}
	mock.recorder = &MockGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenerator) EXPECT() *MockGeneratorMockRecorder {
	return m.recorder
}

// NewUUID mocks base method.
func (m *MockGenerator) NewUUID() uuid.UUID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewUUID")
	ret0, _ := ret[0].(uuid.UUID)
	return ret0
}

// NewUUID indicates an expected call of NewUUID.
func (mr *MockGeneratorMockRecorder) NewUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewUUID", reflect.TypeOf((*MockGenerator)(nil).NewUUID))
}
