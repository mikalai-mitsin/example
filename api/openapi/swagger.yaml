components:
  schemas:
    errs.Error:
      properties:
        code:
          $ref: '#/components/schemas/errs.ErrorCode'
        message:
          type: string
        params:
          items:
            $ref: '#/components/schemas/errs.Param'
          type: array
          uniqueItems: false
      type: object
    errs.ErrorCode:
      type: integer
      x-enum-varnames:
      - ErrorCodeOK
      - ErrorCodeCanceled
      - ErrorCodeUnknown
      - ErrorCodeInvalidArgument
      - ErrorCodeDeadlineExceeded
      - ErrorCodeNotFound
      - ErrorCodeAlreadyExists
      - ErrorCodePermissionDenied
      - ErrorCodeResourceExhausted
      - ErrorCodeFailedPrecondition
      - ErrorCodeAborted
      - ErrorCodeOutOfRange
      - ErrorCodeUnimplemented
      - ErrorCodeInternal
      - ErrorCodeUnavailable
      - ErrorCodeDataLoss
      - ErrorCodeUnauthenticated
      - ErrorCodeClosedRequest
    errs.Param:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    handlers.ArticleCreateDTO:
      properties:
        body:
          type: string
        is_published:
          type: boolean
        subtitle:
          type: string
        title:
          type: string
      type: object
    handlers.ArticleDTO:
      properties:
        body:
          type: string
        created_at:
          type: string
        id:
          type: string
        is_published:
          type: boolean
        subtitle:
          type: string
        title:
          type: string
        updated_at:
          type: string
      type: object
    handlers.ArticleListDTO:
      properties:
        count:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/handlers.ArticleDTO'
          type: array
          uniqueItems: false
      type: object
    handlers.ArticleUpdateDTO:
      properties:
        body:
          type: string
        id:
          type: string
        is_published:
          type: boolean
        subtitle:
          type: string
        title:
          type: string
      type: object
    handlers.LikeCreateDTO:
      properties:
        post_id:
          type: string
        user_id:
          type: string
        value:
          type: string
      type: object
    handlers.LikeDTO:
      properties:
        created_at:
          type: string
        id:
          type: string
        post_id:
          type: string
        updated_at:
          type: string
        user_id:
          type: string
        value:
          type: string
      type: object
    handlers.LikeListDTO:
      properties:
        count:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/handlers.LikeDTO'
          type: array
          uniqueItems: false
      type: object
    handlers.LikeUpdateDTO:
      properties:
        id:
          type: string
        post_id:
          type: string
        user_id:
          type: string
        value:
          type: string
      type: object
    handlers.PostCreateDTO:
      properties:
        body:
          type: string
      type: object
    handlers.PostDTO:
      properties:
        body:
          type: string
        created_at:
          type: string
        id:
          type: string
        updated_at:
          type: string
      type: object
    handlers.PostListDTO:
      properties:
        count:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/handlers.PostDTO'
          type: array
          uniqueItems: false
      type: object
    handlers.PostUpdateDTO:
      properties:
        body:
          type: string
        id:
          type: string
      type: object
    handlers.TagCreateDTO:
      properties:
        post_id:
          type: string
        value:
          type: string
      type: object
    handlers.TagDTO:
      properties:
        created_at:
          type: string
        id:
          type: string
        post_id:
          type: string
        updated_at:
          type: string
        value:
          type: string
      type: object
    handlers.TagListDTO:
      properties:
        count:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/handlers.TagDTO'
          type: array
          uniqueItems: false
      type: object
    handlers.TagUpdateDTO:
      properties:
        id:
          type: string
        post_id:
          type: string
        value:
          type: string
      type: object
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
externalDocs:
  description: ""
  url: ""
info:
  title: example
  version: 0.0.0
openapi: 3.1.0
paths:
  /api/v1/articles/articles/:
    get:
      parameters:
      - in: query
        name: page_size
        schema:
          type: integer
      - in: query
        name: page_number
        schema:
          type: integer
      - in: query
        name: order_by
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
      - in: query
        name: search
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.ArticleListDTO'
          description: Filtered list of articles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: List of articles
      tags:
      - article
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.ArticleCreateDTO'
        description: Create article request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.ArticleDTO'
          description: Created article
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create article
      tags:
      - article
  /api/v1/articles/articles/{id}:
    delete:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Delete article by id
      tags:
      - article
    get:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.ArticleDTO'
          description: Requested article
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get article by id
      tags:
      - article
    patch:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.ArticleUpdateDTO'
        description: Update article request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.ArticleDTO'
          description: Updated article
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update article
      tags:
      - article
  /api/v1/posts/likes/:
    get:
      parameters:
      - in: query
        name: page_size
        schema:
          type: integer
      - in: query
        name: page_number
        schema:
          type: integer
      - in: query
        name: order_by
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.LikeListDTO'
          description: Filtered list of likes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: List of likes
      tags:
      - like
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.LikeCreateDTO'
        description: Create like request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.LikeDTO'
          description: Created like
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create like
      tags:
      - like
  /api/v1/posts/likes/{id}:
    delete:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Delete like by id
      tags:
      - like
    get:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.LikeDTO'
          description: Requested like
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get like by id
      tags:
      - like
    patch:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.LikeUpdateDTO'
        description: Update like request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.LikeDTO'
          description: Updated like
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update like
      tags:
      - like
  /api/v1/posts/posts/:
    get:
      parameters:
      - in: query
        name: page_size
        schema:
          type: integer
      - in: query
        name: page_number
        schema:
          type: integer
      - in: query
        name: order_by
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.PostListDTO'
          description: Filtered list of posts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: List of posts
      tags:
      - post
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.PostCreateDTO'
        description: Create post request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.PostDTO'
          description: Created post
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create post
      tags:
      - post
  /api/v1/posts/posts/{id}:
    delete:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Delete post by id
      tags:
      - post
    get:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.PostDTO'
          description: Requested post
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get post by id
      tags:
      - post
    patch:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.PostUpdateDTO'
        description: Update post request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.PostDTO'
          description: Updated post
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update post
      tags:
      - post
  /api/v1/posts/tags/:
    get:
      parameters:
      - in: query
        name: page_size
        schema:
          type: integer
      - in: query
        name: page_number
        schema:
          type: integer
      - in: query
        name: order_by
        schema:
          items:
            type: string
          type: array
          uniqueItems: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.TagListDTO'
          description: Filtered list of tags
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: List of tags
      tags:
      - tag
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.TagCreateDTO'
        description: Create tag request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.TagDTO'
          description: Created tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create tag
      tags:
      - tag
  /api/v1/posts/tags/{id}:
    delete:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Delete tag by id
      tags:
      - tag
    get:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.TagDTO'
          description: Requested tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get tag by id
      tags:
      - tag
    patch:
      parameters:
      - description: UUID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/handlers.TagUpdateDTO'
        description: Update tag request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/handlers.TagDTO'
          description: Updated tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Invalid request body or validation error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errs.Error'
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update tag
      tags:
      - tag
servers:
- url: http://127.0.0.1:8000/
